{"version":3,"file":"Products-GXM-1IG7.js","sources":["../../src/pages/Products.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { \n  Plus, \n  Search, \n  Edit, \n  Trash2, \n  Eye,\n  Package,\n  Save,\n  X\n} from 'lucide-react'\nimport Modal from '../components/ui/Modal'\nimport ConfirmDialog from '../components/ui/ConfirmDialog'\nimport { useForm } from 'react-hook-form'\nimport toast from 'react-hot-toast'\nimport supabase from '../lib/supabase'\nimport { formatCurrency } from '../utils/format'\nimport { useAuth } from '../contexts/AuthContext'\nimport { onAppEvent } from '../lib/eventBus'\nimport { createStoreForUser } from '../utils/store-user-helpers'\n\nconst Products = () => {\n  const [searchTerm, setSearchTerm] = useState('')\n  const [selectedCategory, setSelectedCategory] = useState('all')\n  const [showAddProduct, setShowAddProduct] = useState(false)\n  const [editingProduct, setEditingProduct] = useState(null)\n  const [viewingProduct, setViewingProduct] = useState(null)\n  const [confirmDeleteId, setConfirmDeleteId] = useState(null)\n  // Add Category modal state\n  const [showAddCategoryModal, setShowAddCategoryModal] = useState(false)\n  const [newCategoryName, setNewCategoryName] = useState('')\n  const [addingCategory, setAddingCategory] = useState(false)\n  const { profile, loading: authLoading } = useAuth()\n\n  // Products from database\n  const [products, setProducts] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n\n  const [categories, setCategories] = useState(['all'])\n  const [categoryMap, setCategoryMap] = useState(new Map())\n  const [categoriesData, setCategoriesData] = useState([])\n\n  useEffect(() => {\n    let isMounted = true\n    const fetchData = async () => {\n      try {\n        setLoading(true)\n        setError(null)\n        // Resolve target store: prefer profile.store_id; else fallback to first active mapping in store_users\n        let targetStoreId = profile?.store_id || null\n        if (!targetStoreId && profile?.id) {\n          const { data: su, error: suErr } = await supabase\n            .from('store_users')\n            .select('store_id')\n            .eq('user_id', profile.id)\n            .eq('is_active', true)\n            .limit(1)\n            .maybeSingle()\n          if (suErr && suErr.code !== 'PGRST116') throw suErr\n          if (su?.store_id) targetStoreId = su.store_id\n        }\n        if (!targetStoreId) {\n          if (isMounted) {\n            setProducts([])\n            setCategories(['all'])\n            setCategoriesData([])\n          }\n          return\n        }\n\n        const { data: prodData, error: prodErr } = await supabase\n          .from('products')\n          .select('id, name, sku, barcode, description, cost_price, selling_price, stock_quantity, min_stock_level, image_url, category_id, created_at, updated_at')\n          .eq('store_id', targetStoreId)\n          .order('updated_at', { ascending: false })\n\n        if (prodErr) throw prodErr\n\n        const { data: catData, error: catErr } = await supabase\n          .from('categories')\n          .select('id, name')\n          .eq('store_id', targetStoreId)\n          .order('name')\n\n        if (catErr) throw catErr\n\n        if (!isMounted) return\n        setProducts(prodData || [])\n        const map = new Map((catData || []).map(c => [c.id, c.name]))\n        setCategoryMap(map)\n        setCategoriesData(catData || [])\n        setCategories(['all', ...Array.from(new Set((prodData || []).map(p => map.get(p.category_id)).filter(Boolean)))])\n\n        // Best effort: if profile.store_id is empty, update it to targetStoreId for consistent scoping elsewhere\n        if (!profile?.store_id && profile?.id) {\n          try {\n            await supabase.from('profiles').update({ store_id: targetStoreId, updated_at: new Date().toISOString() }).eq('id', profile.id)\n          } catch (_) {\n            // non-fatal\n          }\n        }\n      } catch (e) {\n        if (!isMounted) return\n        console.error('Failed to load products:', e)\n        setError('Failed to load products')\n      } finally {\n        if (isMounted) setLoading(false)\n      }\n    }\n    if (!authLoading) {\n      fetchData()\n    } else {\n      setLoading(true)\n    }\n    const unsubscribe = onAppEvent('transaction:completed', () => fetchData())\n    return () => { isMounted = false; unsubscribe && unsubscribe() }\n  }, [authLoading, profile?.store_id])\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    watch,\n    setValue,\n    getValues,\n    formState: { errors }\n  } = useForm()\n\n  // Quick SKU generator if left blank\n  const generateSku = (name = '') => {\n    const prefix = (name || '')\n      .toString()\n      .trim()\n      .toUpperCase()\n      .replace(/[^A-Z0-9]+/g, '')\n      .slice(0, 6) || 'SKU'\n    const suffix = Date.now().toString(36).toUpperCase().slice(-5)\n    return `${prefix}-${suffix}`\n  }\n\n  // ...removed legacy prompt-based addCategoryQuick (replaced by modal)\n\n  const filteredProducts = products.filter(product => {\n    const matchesSearch = product.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         product.sku.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         (product.barcode || '').includes(searchTerm)\n    const productCatName = categoryMap.get(product.category_id)\n    const matchesCategory = selectedCategory === 'all' || productCatName === selectedCategory\n    return matchesSearch && matchesCategory\n  })\n\n  const handleAddProduct = async (data) => {\n    try {\n      let currentStoreId = profile?.store_id || null\n      if (!currentStoreId && profile?.id) {\n        const { data: su, error: suErr } = await supabase\n          .from('store_users')\n          .select('store_id')\n          .eq('user_id', profile.id)\n          .eq('is_active', true)\n          .limit(1)\n          .maybeSingle()\n        if (suErr && suErr.code !== 'PGRST116') throw suErr\n        if (su?.store_id) currentStoreId = su.store_id\n      }\n      // If still missing, auto-create a store and mapping\n      if (!currentStoreId) {\n        if (!profile?.id) {\n          toast.error('You must be signed in')\n          return\n        }\n        const storeName = (profile.full_name || profile.email || 'My Store').toString().split('@')[0] + \"'s Store\"\n        const creating = await createStoreForUser(supabase, profile.id, storeName, 'owner')\n        if (!creating.success || !creating.storeId) {\n          console.error('Auto-create store failed:', creating.error || creating.message)\n          toast.error('Could not create a store for your account')\n          return\n        }\n        currentStoreId = creating.storeId\n      }\n      // Normalize and auto-generate SKU if empty\n      let sku = (data.sku || '').trim()\n      if (!sku) {\n        sku = generateSku(data.name)\n      }\n\n      // Pre-check duplicate SKU in this store\n      const { data: existingSku, error: skuErr } = await supabase\n        .from('products')\n        .select('id')\n  .eq('store_id', currentStoreId)\n        .eq('sku', sku)\n        .maybeSingle()\n      if (skuErr && skuErr.code !== 'PGRST116') {\n        // PGRST116 is no rows when using single/maybeSingle\n        throw skuErr\n      }\n      if (existingSku) {\n        toast.error('SKU already exists in your store')\n        return\n      }\n\n      const payload = {\n        ...data,\n        sku,\n        cost_price: parseFloat(data.cost_price),\n        selling_price: parseFloat(data.selling_price),\n        stock_quantity: parseInt(data.stock_quantity),\n        min_stock_level: parseInt(data.min_stock_level),\n  store_id: currentStoreId\n      }\n      const { data: inserted, error } = await supabase\n        .from('products')\n        .insert([payload])\n        .select()\n      if (error) {\n        // Handle unique violation gracefully\n        if (error.code === '23505') {\n          toast.error('SKU already exists')\n          return\n        }\n        throw error\n      }\n      // Log initial stock if any\n      const created = inserted?.[0]\n      if (created && payload.stock_quantity > 0) {\n        try {\n          await supabase.from('inventory_logs').insert([{\n            product_id: created.id,\n            store_id: currentStoreId,\n            type: 'stock_in',\n            quantity_change: payload.stock_quantity,\n            previous_quantity: 0,\n            new_quantity: payload.stock_quantity,\n            reason: 'initial_stock',\n            notes: 'Initial stock on product creation',\n            created_by: profile.id\n          }])\n        } catch (logErr) {\n          console.warn('Inventory log failed:', logErr)\n        }\n      }\n      setProducts([...(inserted || []), ...products])\n      setShowAddProduct(false)\n      reset()\n      toast.success('Product added successfully!')\n    } catch (e) {\n      console.error(e)\n      toast.error('Failed to add product')\n    }\n  }\n\n  const handleEditProduct = async (data) => {\n    try {\n      // Ensure SKU cannot be blank on edit\n      const nextSku = (data.sku || '').trim() || editingProduct.sku\n      const payload = {\n        ...data,\n        sku: nextSku,\n        cost_price: parseFloat(data.cost_price),\n        selling_price: parseFloat(data.selling_price),\n        stock_quantity: parseInt(data.stock_quantity),\n        min_stock_level: parseInt(data.min_stock_level)\n      }\n      const { data: updated, error } = await supabase\n        .from('products')\n        .update(payload)\n        .eq('id', editingProduct.id)\n        .select()\n      if (error) throw error\n      const updatedProducts = products.map(p => p.id === editingProduct.id ? updated[0] : p)\n      setProducts(updatedProducts)\n      setEditingProduct(null)\n      reset()\n      toast.success('Product updated successfully!')\n    } catch (e) {\n      console.error(e)\n      toast.error('Failed to update product')\n    }\n  }\n\n  const handleDeleteProduct = (productId) => {\n    setConfirmDeleteId(productId)\n  }\n  const confirmDelete = () => {\n    if (confirmDeleteId == null) return\n    // Delete in DB then update state\n    supabase.from('products').delete().eq('id', confirmDeleteId)\n      .then(({ error }) => {\n        if (error) {\n          console.error(error)\n          toast.error('Failed to delete product')\n        } else {\n          setProducts(products.filter(product => product.id !== confirmDeleteId))\n          toast.success('Product deleted successfully!')\n        }\n  })\n  }\n\n  const getStockStatus = (product) => {\n    if (product.stock_quantity === 0) {\n      return { status: 'out', color: 'text-red-600', bg: 'bg-red-100' }\n    } else if (product.stock_quantity <= product.min_stock_level) {\n      return { status: 'low', color: 'text-orange-600', bg: 'bg-orange-100' }\n    }\n    return { status: 'good', color: 'text-green-600', bg: 'bg-green-100' }\n  }\n\n  const ProductForm = ({ product, onSubmit, onCancel }) => {\n    const cost = parseFloat(watch('cost_price') || 0)\n    const price = parseFloat(watch('selling_price') || 0)\n    const margin = Math.max(price - cost, 0)\n    const marginPct = price > 0 ? (margin / price) * 100 : 0\n    const isEditing = !!product\n    return (\n      <form onSubmit={handleSubmit(onSubmit)} className=\"p-6 space-y-4\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div>\n            <label className=\"label\">Product Name *</label>\n            <input\n              {...register('name', { required: 'Product name is required' })}\n              className=\"input\"\n              defaultValue={product?.name}\n              placeholder=\"Enter product name\"\n            />\n            {errors.name && <p className=\"text-sm text-red-600 mt-1\">{errors.name.message}</p>}\n          </div>\n\n          <div>\n            <label className=\"label\">SKU {isEditing ? '*' : ''}</label>\n            <input\n              {...register('sku')}\n              className=\"input\"\n              defaultValue={product?.sku}\n              placeholder={isEditing ? 'Enter SKU' : 'Leave blank to auto-generate'}\n            />\n            {errors.sku && <p className=\"text-sm text-red-600 mt-1\">{errors.sku.message}</p>}\n          </div>\n\n          <div>\n            <label className=\"label\">Barcode</label>\n            <input\n              {...register('barcode')}\n              className=\"input\"\n              defaultValue={product?.barcode}\n              placeholder=\"Enter barcode\"\n            />\n          </div>\n\n      <div>\n            <div className=\"flex items-center justify-between\">\n              <label className=\"label\">Category *</label>\n        <button type=\"button\" onClick={() => setShowAddCategoryModal(true)} className=\"text-sm text-primary-600 hover:text-primary-500 inline-flex items-center\">\n                <Plus className=\"w-3 h-3 mr-1\" /> Add new\n              </button>\n            </div>\n            <select\n              {...register('category_id', { required: 'Category is required' })}\n              className=\"input\"\n              defaultValue={product?.category_id || ''}\n            >\n              <option value=\"\">Select category</option>\n              {categoriesData.map(cat => (\n                <option key={cat.id} value={cat.id}>{cat.name}</option>\n              ))}\n            </select>\n            {errors.category_id && <p className=\"text-sm text-red-600 mt-1\">{errors.category_id.message}</p>}\n          </div>\n\n          <div>\n            <label className=\"label\">Cost Price *</label>\n            <input\n              type=\"number\"\n              step=\"0.01\"\n              {...register('cost_price', {\n                required: 'Cost price is required',\n                min: { value: 0, message: 'Cost price must be positive' }\n              })}\n              className=\"input\"\n              defaultValue={product?.cost_price}\n              placeholder=\"0.00\"\n            />\n            {errors.cost_price && <p className=\"text-sm text-red-600 mt-1\">{errors.cost_price.message}</p>}\n          </div>\n\n          <div>\n            <label className=\"label\">Selling Price *</label>\n            <input\n              type=\"number\"\n              step=\"0.01\"\n              {...register('selling_price', {\n                required: 'Selling price is required',\n                min: { value: 0, message: 'Selling price must be positive' },\n                validate: (v) => parseFloat(v || 0) >= parseFloat(getValues('cost_price') || 0) || 'Selling must be greater than or equal to cost'\n              })}\n              className=\"input\"\n              defaultValue={product?.selling_price}\n              placeholder=\"0.00\"\n            />\n            <p className=\"text-xs text-gray-500 mt-1\">Margin: {formatCurrency(margin)} ({marginPct.toFixed(1)}%)</p>\n            {errors.selling_price && <p className=\"text-sm text-red-600 mt-1\">{errors.selling_price.message}</p>}\n          </div>\n\n          <div>\n            <label className=\"label\">Stock Quantity *</label>\n            <input\n              type=\"number\"\n              {...register('stock_quantity', {\n                required: 'Stock quantity is required',\n                min: { value: 0, message: 'Stock quantity must be positive' }\n              })}\n              className=\"input\"\n              defaultValue={product?.stock_quantity}\n              placeholder=\"0\"\n            />\n            {errors.stock_quantity && <p className=\"text-sm text-red-600 mt-1\">{errors.stock_quantity.message}</p>}\n          </div>\n\n          <div>\n            <label className=\"label\">Minimum Stock Level</label>\n            <input\n              type=\"number\"\n              {...register('min_stock_level', {\n                min: { value: 0, message: 'Minimum stock must be positive' }\n              })}\n              className=\"input\"\n              defaultValue={product?.min_stock_level || 0}\n              placeholder=\"0\"\n            />\n            {errors.min_stock_level && <p className=\"text-sm text-red-600 mt-1\">{errors.min_stock_level.message}</p>}\n          </div>\n        </div>\n\n        <div>\n          <label className=\"label\">Description</label>\n          <textarea\n            {...register('description')}\n            className=\"input h-24 resize-none\"\n            defaultValue={product?.description}\n            placeholder=\"Enter product description\"\n          />\n        </div>\n\n        <div className=\"flex justify-end space-x-3 pt-4 border-t\">\n          <button\n            type=\"button\"\n            onClick={onCancel}\n            className=\"btn btn-secondary btn-md\"\n          >\n            <X className=\"w-4 h-4 mr-2\" />\n            Cancel\n          </button>\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary btn-md\"\n          >\n            <Save className=\"w-4 h-4 mr-2\" />\n            {isEditing ? 'Update Product' : 'Add Product'}\n          </button>\n        </div>\n      </form>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900 dark:text-gray-100\">Products</h1>\n          <p className=\"mt-1 text-sm text-gray-500 dark:text-gray-300\">\n            Manage your product catalog and inventory\n          </p>\n        </div>\n        <button\n          onClick={() => setShowAddProduct(true)}\n          className=\"btn btn-primary btn-md mt-4 sm:mt-0\"\n        >\n          <Plus className=\"w-4 h-4 mr-2\" />\n          Add Product\n        </button>\n      </div>\n\n      {/* Search and Filters */}\n      <div className=\"card p-4\">\n        <div className=\"flex flex-col sm:flex-row gap-4\">\n          <div className=\"flex-1 relative\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5\" />\n            <input\n              type=\"text\"\n              placeholder=\"Search products by name, SKU, or barcode...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"input pl-10\"\n            />\n          </div>\n          <select\n            value={selectedCategory}\n            onChange={(e) => setSelectedCategory(e.target.value)}\n            className=\"input w-full sm:w-auto\"\n          >\n            {categories.map(category => (\n              <option key={category} value={category}>\n                {category === 'all' ? 'All Categories' : category}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      {/* Products Table */}\n      <div className=\"card overflow-hidden\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n            <thead className=\"table-header\">\n              <tr>\n                <th className=\"table-cell text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                  Product\n                </th>\n                <th className=\"table-cell text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                  SKU\n                </th>\n                <th className=\"table-cell text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                  Category\n                </th>\n                <th className=\"table-cell text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                  Price\n                </th>\n                <th className=\"table-cell text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                  Stock\n                </th>\n                <th className=\"table-cell text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                  Status\n                </th>\n                <th className=\"table-cell text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                  Actions\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"divide-y divide-gray-200 dark:divide-gray-700\">\n              {loading ? (\n                <tr><td className=\"table-cell p-6\" colSpan=\"7\">Loading...</td></tr>\n              ) : error ? (\n                <tr><td className=\"table-cell p-6 text-red-600 dark:text-red-400\" colSpan=\"7\">{error}</td></tr>\n              ) : filteredProducts.map((product) => {\n                const stockStatus = getStockStatus(product)\n                return (\n                  <tr key={product.id} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\n                    <td className=\"table-cell\">\n                      <div className=\"flex items-center\">\n                        <div className=\"w-10 h-10 bg-gray-100 dark:bg-gray-700 rounded-lg flex items-center justify-center mr-3\">\n                          {product.image_url ? (\n                            <img \n                              src={product.image_url} \n                              alt={product.name}\n                              className=\"w-full h-full object-cover rounded-lg\"\n                            />\n                          ) : (\n                            <Package className=\"w-5 h-5 text-gray-400 dark:text-gray-500\" />\n                          )}\n                        </div>\n                        <div>\n                          <div className=\"font-medium text-gray-900 dark:text-gray-100\">{product.name}</div>\n                          <div className=\"text-sm text-gray-500 dark:text-gray-400 truncate max-w-xs\">\n                            {product.description}\n                          </div>\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"table-cell\">\n                      <div className=\"text-sm font-mono\">{product.sku}</div>\n                    </td>\n                    <td className=\"table-cell\">\n                      <span className=\"badge badge-info\">{categoryMap.get(product.category_id) || 'Uncategorized'}</span>\n                    </td>\n                    <td className=\"table-cell\">\n                      <div className=\"text-sm\">\n                        <div className=\"font-medium\">{formatCurrency(product.selling_price)}</div>\n                        <div className=\"text-gray-500 dark:text-gray-400\">Cost: {formatCurrency(product.cost_price)}</div>\n                      </div>\n                    </td>\n                    <td className=\"table-cell\">\n                      <div className=\"text-sm\">\n                        <div className=\"font-medium\">{product.stock_quantity}</div>\n                        <div className=\"text-gray-500 dark:text-gray-400\">Min: {product.min_stock_level}</div>\n                      </div>\n                    </td>\n                    <td className=\"table-cell\">\n                      <span className={`badge ${stockStatus.bg} ${stockStatus.color}`}>\n                        {stockStatus.status === 'out' ? 'Out of Stock' :\n                         stockStatus.status === 'low' ? 'Low Stock' : 'In Stock'}\n                      </span>\n                    </td>\n                    <td className=\"table-cell\">\n                      <div className=\"flex items-center space-x-2\">\n                        <button\n                          onClick={() => setViewingProduct(product)}\n                          className=\"text-gray-400 dark:text-gray-500 hover:text-blue-600 transition-colors\"\n                          title=\"View Details\"\n                        >\n                          <Eye className=\"w-4 h-4\" />\n                        </button>\n                        <button\n                          onClick={() => {\n                            setEditingProduct(product)\n                            reset(product)\n                          }}\n                          className=\"text-gray-400 dark:text-gray-500 hover:text-green-600 transition-colors\"\n                          title=\"Edit Product\"\n                        >\n                          <Edit className=\"w-4 h-4\" />\n                        </button>\n                        <button\n                          onClick={() => handleDeleteProduct(product.id)}\n                          className=\"text-gray-400 dark:text-gray-500 hover:text-red-600 transition-colors\"\n                          title=\"Delete Product\"\n                        >\n                          <Trash2 className=\"w-4 h-4\" />\n                        </button>\n                      </div>\n                    </td>\n                  </tr>\n                )\n              })}\n            </tbody>\n          </table>\n        </div>\n\n  {filteredProducts.length === 0 && !loading && !error && (\n          <div className=\"text-center py-12\">\n            <Package className=\"w-12 h-12 text-gray-300 dark:text-gray-600 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 dark:text-gray-100 mb-2\">No products found</h3>\n            <p className=\"text-gray-500 dark:text-gray-400\">Try adjusting your search or add a new product</p>\n          </div>\n        )}\n      </div>\n\n      {/* Add Product Modal */}\n      <Modal\n        isOpen={showAddProduct}\n        onClose={() => {\n          setShowAddProduct(false)\n          reset()\n        }}\n        title=\"Add New Product\"\n        size=\"lg\"\n      >\n        <ProductForm\n          onSubmit={handleAddProduct}\n          onCancel={() => {\n            setShowAddProduct(false)\n            reset()\n          }}\n        />\n      </Modal>\n\n      {/* Edit Product Modal */}\n      <Modal\n        isOpen={!!editingProduct}\n        onClose={() => {\n          setEditingProduct(null)\n          reset()\n        }}\n        title=\"Edit Product\"\n        size=\"lg\"\n      >\n        <ProductForm\n          product={editingProduct}\n          onSubmit={handleEditProduct}\n          onCancel={() => {\n            setEditingProduct(null)\n            reset()\n          }}\n        />\n      </Modal>\n\n      {/* View Product Modal */}\n      <Modal\n        isOpen={!!viewingProduct}\n        onClose={() => setViewingProduct(null)}\n        title=\"Product Details\"\n        size=\"md\"\n      >\n        {viewingProduct && (\n          <div className=\"p-6 space-y-6\">\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"w-20 h-20 bg-gray-100 dark:bg-gray-700 rounded-lg flex items-center justify-center\">\n                {viewingProduct.image_url ? (\n                  <img \n                    src={viewingProduct.image_url} \n                    alt={viewingProduct.name}\n                    className=\"w-full h-full object-cover rounded-lg\"\n                  />\n                ) : (\n                  <Package className=\"w-8 h-8 text-gray-400 dark:text-gray-500\" />\n                )}\n              </div>\n              <div>\n                <h3 className=\"text-xl font-bold text-gray-900 dark:text-gray-100\">{viewingProduct.name}</h3>\n                <p className=\"text-gray-500 dark:text-gray-400\">{categoryMap.get(viewingProduct.category_id) || 'Uncategorized'}</p>\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label className=\"text-sm font-medium text-gray-500\">SKU</label>\n                <p className=\"font-mono\">{viewingProduct.sku}</p>\n              </div>\n              <div>\n                <label className=\"text-sm font-medium text-gray-500\">Barcode</label>\n                <p className=\"font-mono\">{viewingProduct.barcode || 'N/A'}</p>\n              </div>\n              <div>\n                <label className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Cost Price</label>\n                <p>{formatCurrency(viewingProduct.cost_price)}</p>\n              </div>\n              <div>\n                <label className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Selling Price</label>\n                <p className=\"font-semibold\">{formatCurrency(viewingProduct.selling_price)}</p>\n              </div>\n              <div>\n                <label className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Stock Quantity</label>\n                <p>{viewingProduct.stock_quantity}</p>\n              </div>\n              <div>\n                <label className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Min Stock Level</label>\n                <p>{viewingProduct.min_stock_level}</p>\n              </div>\n            </div>\n\n            {viewingProduct.description && (\n              <div>\n                <label className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Description</label>\n                <p className=\"text-gray-900 dark:text-gray-100\">{viewingProduct.description}</p>\n              </div>\n            )}\n\n            <div className=\"grid grid-cols-2 gap-4 text-sm text-gray-500 dark:text-gray-400\">\n              <div>\n                <label className=\"font-medium\">Created</label>\n                <p>{new Date(viewingProduct.created_at).toLocaleDateString()}</p>\n              </div>\n              <div>\n                <label className=\"font-medium\">Last Updated</label>\n                <p>{new Date(viewingProduct.updated_at).toLocaleDateString()}</p>\n              </div>\n            </div>\n          </div>\n        )}\n      </Modal>\n\n      {/* Add Category Modal */}\n      <Modal\n        isOpen={showAddCategoryModal}\n        onClose={() => { if (!addingCategory) { setShowAddCategoryModal(false); setNewCategoryName('') } }}\n        title=\"Add New Category\"\n        size=\"sm\"\n      >\n        <div className=\"p-6 space-y-4\">\n          <div>\n            <label className=\"label\">Category Name *</label>\n            <input\n              type=\"text\"\n              className=\"input\"\n              value={newCategoryName}\n              onChange={(e) => setNewCategoryName(e.target.value)}\n              placeholder=\"e.g. Beverages\"\n              autoFocus\n              disabled={addingCategory}\n            />\n          </div>\n\n          <div className=\"flex justify-end space-x-3 pt-2\">\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary btn-md\"\n              onClick={() => { if (!addingCategory) { setShowAddCategoryModal(false); setNewCategoryName('') } }}\n              disabled={addingCategory}\n            >\n              <X className=\"w-4 h-4 mr-2\" />\n              Cancel\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-primary btn-md\"\n              disabled={addingCategory || !newCategoryName.trim()}\n              onClick={async () => {\n                const name = newCategoryName.trim()\n                if (!name) return\n                setAddingCategory(true)\n                try {\n                  // Resolve store_id from profile or store_users mapping\n                  let targetStoreId = profile?.store_id || null\n                  if (!targetStoreId && profile?.id) {\n                    const { data: su, error: suErr } = await supabase\n                      .from('store_users')\n                      .select('store_id')\n                      .eq('user_id', profile.id)\n                      .eq('is_active', true)\n                      .limit(1)\n                      .maybeSingle()\n                    if (suErr && suErr.code !== 'PGRST116') throw suErr\n                    if (su?.store_id) targetStoreId = su.store_id\n                  }\n                  if (!targetStoreId) {\n                    toast.error('No store found for your account')\n                    return\n                  }\n                  const { data: newCat, error: catErr } = await supabase\n                    .from('categories')\n                    .insert([{ name, store_id: targetStoreId }])\n                    .select()\n                    .single()\n                  if (catErr) throw catErr\n                  setCategoriesData(prev => [...prev, newCat])\n                  setCategoryMap(prev => new Map(prev).set(newCat.id, newCat.name))\n                  setValue('category_id', newCat.id)\n                  toast.success('Category added')\n                  setShowAddCategoryModal(false)\n                  setNewCategoryName('')\n                } catch (e) {\n                  console.error('Failed to add category:', e)\n                  if (e?.code === '42501' || e?.message?.toLowerCase?.().includes('permission') || e?.message?.toLowerCase?.().includes('policy')) {\n                    toast.error('You do not have permission to add categories')\n                  } else {\n                    toast.error('Failed to add category')\n                  }\n                } finally {\n                  setAddingCategory(false)\n                }\n              }}\n            >\n              <Save className=\"w-4 h-4 mr-2\" />\n              Save\n            </button>\n          </div>\n        </div>\n      </Modal>\n\n      {/* Delete confirmation */}\n      <ConfirmDialog\n        isOpen={confirmDeleteId != null}\n        onCancel={() => setConfirmDeleteId(null)}\n        onConfirm={confirmDelete}\n        title=\"Delete product?\"\n        description=\"This action cannot be undone. The product will be removed from your catalog.\"\n        confirmText=\"Delete\"\n        variant=\"danger\"\n      />\n    </div>\n  )\n}\n\nexport default Products\n"],"names":["Products","searchTerm","setSearchTerm","useState","selectedCategory","setSelectedCategory","showAddProduct","setShowAddProduct","editingProduct","setEditingProduct","viewingProduct","setViewingProduct","confirmDeleteId","setConfirmDeleteId","showAddCategoryModal","setShowAddCategoryModal","newCategoryName","setNewCategoryName","addingCategory","setAddingCategory","profile","authLoading","useAuth","products","setProducts","loading","setLoading","error","setError","categories","setCategories","categoryMap","setCategoryMap","categoriesData","setCategoriesData","useEffect","isMounted","fetchData","targetStoreId","su","suErr","supabase","prodData","prodErr","catData","catErr","map","c","p","e","unsubscribe","onAppEvent","register","handleSubmit","reset","watch","setValue","getValues","errors","useForm","generateSku","name","prefix","suffix","filteredProducts","product","matchesSearch","productCatName","handleAddProduct","data","currentStoreId","toast","storeName","creating","createStoreForUser","sku","existingSku","skuErr","payload","inserted","created","logErr","handleEditProduct","nextSku","updated","updatedProducts","handleDeleteProduct","productId","confirmDelete","getStockStatus","ProductForm","onSubmit","onCancel","cost","price","margin","marginPct","isEditing","jsxs","jsx","Plus","cat","v","formatCurrency","X","Save","Search","category","stockStatus","Package","Eye","Edit","Trash2","Modal","newCat","prev","_b","_a","_d","_c","ConfirmDialog"],"mappings":"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"}