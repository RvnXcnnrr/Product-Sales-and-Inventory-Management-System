const l=async(t,o,e,i="staff")=>{try{if(!o)throw new Error("User ID is required");if(!e)throw new Error("Store ID is required");const{data:r,error:c}=await t.from("store_users").select("id").eq("user_id",o).eq("store_id",e).single();if(c&&c.code!=="PGRST116")return console.error("Error checking store_users:",c),{success:!1,error:c,message:`Failed to check if user is in store: ${c.message}`};if(r)return{success:!0,created:!1,message:"User already connected to store"};const s=new Date().toISOString(),{error:n}=await t.from("store_users").insert([{user_id:o,store_id:e,role:i,is_active:!0,created_at:s,updated_at:s}]);if(n)return console.error("Error inserting store_users:",n),{success:!1,error:n,message:`Failed to add user to store: ${n.message}`};const{error:a}=await t.from("profiles").update({store_id:e}).eq("id",o);return a&&console.warn("Warning: Could not update profile with store_id:",a),{success:!0,created:!0,message:"User successfully connected to store"}}catch(r){return console.error("Exception in ensureUserInStore:",r),{success:!1,error:r,message:`Exception connecting user to store: ${r.message}`}}},f=async(t,o,e,i="owner")=>{try{if(!o)throw new Error("User ID is required");if(!e)throw new Error("Store name is required");const r=new Date().toISOString(),c=e.substring(0,3).toUpperCase()+Math.floor(Math.random()*1e3);let s;try{const{data:a,error:u}=await t.rpc("create_store_for_current_user",{p_store_name:e,p_role:i});if(u)throw u;s=a}catch(a){console.warn("RPC create_store_for_current_user failed, falling back to direct insert:",a);const{data:u,error:d}=await t.from("stores").insert([{name:e,code:c,created_at:r,updated_at:r}]).select().single();if(d)return console.error("Error creating store:",d),{success:!1,error:d,message:`Failed to create store: ${d.message}`};s=u.id}const n=await l(t,o,s,i);return{...n,store:n.success?{id:s,name:e}:null,storeId:s}}catch(r){return console.error("Exception in createStoreForUser:",r),{success:!1,error:r,message:`Exception creating store for user: ${r.message}`}}};export{f as c,l as e};
//# sourceMappingURL=store-user-helpers-N5knuo_n.js.map
