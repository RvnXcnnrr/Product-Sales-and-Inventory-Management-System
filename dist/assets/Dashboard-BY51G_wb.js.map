{"version":3,"file":"Dashboard-BY51G_wb.js","sources":["../../src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react'\nimport { \n  TrendingUp, \n  DollarSign, \n  Package, \n  ShoppingCart, \n  AlertTriangle,\n  Eye\n} from 'lucide-react'\nimport { Link } from 'react-router-dom'\nimport supabase from '../lib/supabase.js'\nimport useSystemSettings from '../utils/systemSettings'\nimport LoadingSpinner from '../components/ui/LoadingSpinner.jsx'\n\nconst Dashboard = () => {\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n  const [recentTransactions, setRecentTransactions] = useState([])\n  const [lowStockProducts, setLowStockProducts] = useState([])\n  const [totals, setTotals] = useState({\n    todaySales: 0,\n    transactionsToday: 0,\n    totalProducts: 0,\n    lowStockCount: 0,\n  })\n\n  // Currency settings\n  const { settings } = useSystemSettings()\n  const currencyFormatter = useMemo(() => {\n    try {\n      return new Intl.NumberFormat(undefined, {\n        style: 'currency',\n        currency: settings?.currency || 'USD',\n        maximumFractionDigits: 2,\n      })\n    } catch {\n      return new Intl.NumberFormat(undefined, { style: 'currency', currency: 'USD', maximumFractionDigits: 2 })\n    }\n  }, [settings?.currency])\n\n  // Helpers\n  const startOfTodayISO = useMemo(() => {\n    const d = new Date()\n    d.setHours(0, 0, 0, 0)\n    return d.toISOString()\n  }, [])\n\n  useEffect(() => {\n    let isMounted = true\n\n    const load = async () => {\n      setLoading(true)\n      setError(null)\n      try {\n        // Recent transactions with item count (RLS ensures only user-accessible data)\n        const { data: tx, error: txErr } = await supabase\n          .from('transactions')\n          .select('id, customer_name, total_amount, processed_at, status, transaction_items(count)')\n          .order('processed_at', { ascending: false })\n          .limit(5)\n\n        if (txErr) throw txErr\n\n        // Today transactions for metrics\n        const { data: txToday, error: txTodayErr } = await supabase\n          .from('transactions')\n          .select('id, total_amount, processed_at')\n          .gte('processed_at', startOfTodayISO)\n\n        if (txTodayErr) throw txTodayErr\n\n        // Products (count only)\n        const { count: productsCount, error: prodCountErr } = await supabase\n          .from('products')\n          .select('id', { count: 'exact', head: true })\n\n        if (prodCountErr) throw prodCountErr\n\n        // Low stock products (fetch and filter client-side for column comparison)\n        const { data: products, error: lowErr } = await supabase\n          .from('products')\n          .select('id, name, sku, stock_quantity, min_stock_level, selling_price')\n          .limit(25)\n\n        if (lowErr) throw lowErr\n\n        const low = (products || []).filter(p => (p.stock_quantity ?? 0) <= (p.min_stock_level ?? 0))\n\n        if (!isMounted) return\n\n        setRecentTransactions(\n          (tx || []).map(t => ({\n            id: t.id,\n            customer: t.customer_name || 'â€”',\n            amount: Number(t.total_amount || 0),\n            items: Array.isArray(t.transaction_items) && t.transaction_items.length > 0 && t.transaction_items[0]?.count != null\n              ? t.transaction_items[0].count\n              : undefined,\n            time: new Date(t.processed_at).toLocaleString(),\n            status: t.status || 'completed',\n          }))\n        )\n\n        const todaySales = (txToday || []).reduce((sum, t) => sum + Number(t.total_amount || 0), 0)\n        const transactionsToday = (txToday || []).length\n\n        setLowStockProducts(low.slice(0, 5).map(p => ({\n          id: p.id,\n          name: p.name,\n          sku: p.sku,\n          currentStock: p.stock_quantity ?? 0,\n          minStock: p.min_stock_level ?? 0,\n          price: Number(p.selling_price || 0),\n        })))\n\n        setTotals({\n          todaySales,\n          transactionsToday,\n          totalProducts: productsCount || 0,\n          lowStockCount: low.length,\n        })\n      } catch (e) {\n        console.error('Dashboard load error:', e)\n        if (isMounted) setError(e.message || 'Failed to load dashboard')\n      } finally {\n        if (isMounted) setLoading(false)\n      }\n    }\n\n    load()\n    return () => { isMounted = false }\n  }, [startOfTodayISO])\n\n  const stats = useMemo(() => ([\n    {\n      title: \"Today's Sales\",\n  value: currencyFormatter.format(totals.todaySales),\n      change: '',\n      changeType: 'neutral',\n      icon: DollarSign,\n      color: 'bg-green-500'\n    },\n    {\n      title: 'Total Products',\n      value: `${totals.totalProducts}`,\n      change: '',\n      changeType: 'neutral',\n      icon: Package,\n      color: 'bg-blue-500'\n    },\n    {\n      title: 'Transactions (Today)',\n      value: `${totals.transactionsToday}`,\n      change: '',\n      changeType: 'neutral',\n      icon: ShoppingCart,\n      color: 'bg-purple-500'\n    },\n    {\n      title: 'Low Stock Items',\n      value: `${totals.lowStockCount}`,\n      change: '',\n      changeType: 'neutral',\n      icon: AlertTriangle,\n      color: 'bg-orange-500'\n    }\n  ]), [totals])\n\n  if (loading) {\n    return <LoadingSpinner text=\"Loading dashboard...\" />\n  }\n\n  if (error) {\n    return (\n      <div className=\"space-y-4\">\n        <div className=\"bg-red-50 border border-red-200 text-red-700 p-4 rounded\">\n          Failed to load dashboard: {error}\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900\">Dashboard</h1>\n          <p className=\"mt-1 text-sm text-gray-500\">\n            Overview of your store performance\n          </p>\n        </div>\n        <div className=\"mt-4 sm:mt-0 flex space-x-3\">\n          <Link\n            to=\"/sales\"\n            className=\"btn btn-primary btn-md\"\n          >\n            <ShoppingCart className=\"w-4 h-4 mr-2\" />\n            New Sale\n          </Link>\n          <Link\n            to=\"/products\"\n            className=\"btn btn-secondary btn-md\"\n          >\n            <Package className=\"w-4 h-4 mr-2\" />\n            Add Product\n          </Link>\n        </div>\n      </div>\n\n      {/* Stats Grid */}\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6\">\n        {stats.map((stat, index) => (\n          <div key={index} className=\"card p-6\">\n            <div className=\"flex items-center\">\n              <div className={`p-3 rounded-lg ${stat.color}`}>\n                <stat.icon className=\"w-6 h-6 text-white\" />\n              </div>\n              <div className=\"ml-4 flex-1\">\n                <p className=\"text-sm font-medium text-gray-600\">{stat.title}</p>\n                <div className=\"flex items-center mt-1\">\n                  <p className=\"text-2xl font-bold text-gray-900\">{stat.value}</p>\n                  <span className={`ml-2 text-sm font-medium ${\n                    stat.changeType === 'positive' ? 'text-green-600' : 'text-red-600'\n                  }`}>\n                    {stat.change}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Main Content Grid */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Recent Transactions */}\n        <div className=\"lg:col-span-2\">\n          <div className=\"card\">\n            <div className=\"p-6 border-b border-gray-200\">\n              <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-lg font-semibold text-gray-900\">Recent Transactions</h3>\n                <Link\n                  to=\"/reports\"\n                  className=\"text-sm text-primary-600 hover:text-primary-500 flex items-center\"\n                >\n                  <Eye className=\"w-4 h-4 mr-1\" />\n                  View All\n                </Link>\n              </div>\n            </div>\n            <div className=\"overflow-hidden\">\n              <div className=\"overflow-x-auto\">\n                <table className=\"min-w-full divide-y divide-gray-200\">\n                  <thead className=\"table-header\">\n                    <tr>\n                      <th className=\"table-cell text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Customer\n                      </th>\n                      <th className=\"table-cell text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Amount\n                      </th>\n                      <th className=\"table-cell text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Items\n                      </th>\n                      <th className=\"table-cell text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Time\n                      </th>\n                      <th className=\"table-cell text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Status\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"divide-y divide-gray-200\">\n                    {recentTransactions.map((transaction) => (\n                      <tr key={transaction.id} className=\"hover:bg-gray-50\">\n                        <td className=\"table-cell\">\n                          <div className=\"font-medium text-gray-900\">{transaction.customer}</div>\n                        </td>\n                        <td className=\"table-cell\">\n                          <div className=\"font-medium text-gray-900\">{currencyFormatter.format(transaction.amount)}</div>\n                        </td>\n                        <td className=\"table-cell\">\n                          <div className=\"text-gray-900\">{transaction.items} items</div>\n                        </td>\n                        <td className=\"table-cell\">\n                          <div className=\"text-gray-500\">{transaction.time}</div>\n                        </td>\n                        <td className=\"table-cell\">\n                          <span className=\"badge badge-success\">\n                            {transaction.status}\n                          </span>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Low Stock Alert */}\n        <div className=\"space-y-6\">\n          <div className=\"card\">\n            <div className=\"p-6 border-b border-gray-200\">\n              <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-lg font-semibold text-gray-900\">Low Stock Alert</h3>\n                <Link\n                  to=\"/inventory\"\n                  className=\"text-sm text-primary-600 hover:text-primary-500 flex items-center\"\n                >\n                  <Eye className=\"w-4 h-4 mr-1\" />\n                  Manage\n                </Link>\n              </div>\n            </div>\n            <div className=\"p-6\">\n              <div className=\"space-y-4\">\n                {lowStockProducts.map((product) => (\n                  <div key={product.id} className=\"flex items-center justify-between p-3 bg-red-50 rounded-lg border border-red-200\">\n                    <div className=\"flex-1\">\n                      <p className=\"font-medium text-gray-900\">{product.name}</p>\n                      <p className=\"text-sm text-gray-500\">SKU: {product.sku}</p>\n                      <div className=\"flex items-center mt-1\">\n                        <span className=\"text-sm text-red-600 font-medium\">\n                          {product.currentStock} in stock\n                        </span>\n                        <span className=\"text-sm text-gray-500 ml-2\">\n                          (min: {product.minStock})\n                        </span>\n                      </div>\n                    </div>\n                    <div className=\"ml-4\">\n                      <AlertTriangle className=\"w-5 h-5 text-red-500\" />\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          {/* Quick Actions */}\n          <div className=\"card\">\n            <div className=\"p-6 border-b border-gray-200\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">Quick Actions</h3>\n            </div>\n            <div className=\"p-6\">\n              <div className=\"space-y-3\">\n                <Link\n                  to=\"/sales\"\n                  className=\"w-full btn btn-primary btn-md justify-start\"\n                >\n                  <ShoppingCart className=\"w-4 h-4 mr-2\" />\n                  Process Sale\n                </Link>\n                <Link\n                  to=\"/products\"\n                  className=\"w-full btn btn-secondary btn-md justify-start\"\n                >\n                  <Package className=\"w-4 h-4 mr-2\" />\n                  Add Product\n                </Link>\n                <Link\n                  to=\"/inventory\"\n                  className=\"w-full btn btn-secondary btn-md justify-start\"\n                >\n                  <AlertTriangle className=\"w-4 h-4 mr-2\" />\n                  Stock Management\n                </Link>\n                <Link\n                  to=\"/reports\"\n                  className=\"w-full btn btn-secondary btn-md justify-start\"\n                >\n                  <TrendingUp className=\"w-4 h-4 mr-2\" />\n                  View Reports\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Dashboard\n"],"names":["Dashboard","loading","setLoading","useState","error","setError","recentTransactions","setRecentTransactions","lowStockProducts","setLowStockProducts","totals","setTotals","settings","useSystemSettings","currencyFormatter","useMemo","startOfTodayISO","d","useEffect","isMounted","tx","txErr","supabase","txToday","txTodayErr","productsCount","prodCountErr","products","lowErr","low","p","_a","todaySales","sum","t","transactionsToday","e","stats","DollarSign","Package","ShoppingCart","AlertTriangle","jsx","LoadingSpinner","jsxs","Link","stat","index","Eye","transaction","product","TrendingUp"],"mappings":"mMAcA,MAAMA,EAAY,IAAM,CACtB,KAAM,CAACC,EAASC,CAAU,EAAIC,EAAAA,SAAS,EAAI,EACrC,CAACC,EAAOC,CAAQ,EAAIF,EAAAA,SAAS,IAAI,EACjC,CAACG,EAAoBC,CAAqB,EAAIJ,EAAAA,SAAS,CAAA,CAAE,EACzD,CAACK,EAAkBC,CAAmB,EAAIN,EAAAA,SAAS,CAAA,CAAE,EACrD,CAACO,EAAQC,CAAS,EAAIR,WAAS,CACnC,WAAY,EACZ,kBAAmB,EACnB,cAAe,EACf,cAAe,CAAA,CAChB,EAGK,CAAE,SAAAS,CAAA,EAAaC,EAAA,EACfC,EAAoBC,EAAAA,QAAQ,IAAM,CACtC,GAAI,CACF,OAAO,IAAI,KAAK,aAAa,OAAW,CACtC,MAAO,WACP,UAAUH,GAAA,YAAAA,EAAU,WAAY,MAChC,sBAAuB,CAAA,CACxB,CACH,MAAQ,CACN,OAAO,IAAI,KAAK,aAAa,OAAW,CAAE,MAAO,WAAY,SAAU,MAAO,sBAAuB,CAAA,CAAG,CAC1G,CACF,EAAG,CAACA,GAAA,YAAAA,EAAU,QAAQ,CAAC,EAGjBI,EAAkBD,EAAAA,QAAQ,IAAM,CACpC,MAAME,MAAQ,KACd,OAAAA,EAAE,SAAS,EAAG,EAAG,EAAG,CAAC,EACdA,EAAE,YAAA,CACX,EAAG,CAAA,CAAE,EAELC,EAAAA,UAAU,IAAM,CACd,IAAIC,EAAY,GAiFhB,OA/Ea,SAAY,CACvBjB,EAAW,EAAI,EACfG,EAAS,IAAI,EACb,GAAI,CAEF,KAAM,CAAE,KAAMe,EAAI,MAAOC,GAAU,MAAMC,EACtC,KAAK,cAAc,EACnB,OAAO,iFAAiF,EACxF,MAAM,eAAgB,CAAE,UAAW,EAAA,CAAO,EAC1C,MAAM,CAAC,EAEV,GAAID,EAAO,MAAMA,EAGjB,KAAM,CAAE,KAAME,EAAS,MAAOC,CAAA,EAAe,MAAMF,EAChD,KAAK,cAAc,EACnB,OAAO,gCAAgC,EACvC,IAAI,eAAgBN,CAAe,EAEtC,GAAIQ,EAAY,MAAMA,EAGtB,KAAM,CAAE,MAAOC,EAAe,MAAOC,CAAA,EAAiB,MAAMJ,EACzD,KAAK,UAAU,EACf,OAAO,KAAM,CAAE,MAAO,QAAS,KAAM,GAAM,EAE9C,GAAII,EAAc,MAAMA,EAGxB,KAAM,CAAE,KAAMC,EAAU,MAAOC,GAAW,MAAMN,EAC7C,KAAK,UAAU,EACf,OAAO,+DAA+D,EACtE,MAAM,EAAE,EAEX,GAAIM,EAAQ,MAAMA,EAElB,MAAMC,GAAOF,GAAY,CAAA,GAAI,OAAOG,IAAMA,EAAE,gBAAkB,KAAOA,EAAE,iBAAmB,EAAE,EAE5F,GAAI,CAACX,EAAW,OAEhBZ,GACGa,GAAM,CAAA,GAAI,IAAI,GAAA,OAAM,OACnB,GAAI,EAAE,GACN,SAAU,EAAE,eAAiB,IAC7B,OAAQ,OAAO,EAAE,cAAgB,CAAC,EAClC,MAAO,MAAM,QAAQ,EAAE,iBAAiB,GAAK,EAAE,kBAAkB,OAAS,KAAKW,EAAA,EAAE,kBAAkB,CAAC,IAArB,YAAAA,EAAwB,QAAS,KAC5G,EAAE,kBAAkB,CAAC,EAAE,MACvB,OACJ,KAAM,IAAI,KAAK,EAAE,YAAY,EAAE,eAAA,EAC/B,OAAQ,EAAE,QAAU,WAAA,EACpB,CAAA,EAGJ,MAAMC,GAAcT,GAAW,CAAA,GAAI,OAAO,CAACU,EAAKC,IAAMD,EAAM,OAAOC,EAAE,cAAgB,CAAC,EAAG,CAAC,EACpFC,GAAqBZ,GAAW,CAAA,GAAI,OAE1Cd,EAAoBoB,EAAI,MAAM,EAAG,CAAC,EAAE,IAAIC,IAAM,CAC5C,GAAIA,EAAE,GACN,KAAMA,EAAE,KACR,IAAKA,EAAE,IACP,aAAcA,EAAE,gBAAkB,EAClC,SAAUA,EAAE,iBAAmB,EAC/B,MAAO,OAAOA,EAAE,eAAiB,CAAC,CAAA,EAClC,CAAC,EAEHnB,EAAU,CACR,WAAAqB,EACA,kBAAAG,EACA,cAAeV,GAAiB,EAChC,cAAeI,EAAI,MAAA,CACpB,CACH,OAASO,EAAG,CACV,QAAQ,MAAM,wBAAyBA,CAAC,EACpCjB,GAAWd,EAAS+B,EAAE,SAAW,0BAA0B,CACjE,QAAA,CACMjB,KAAsB,EAAK,CACjC,CACF,GAEA,EACO,IAAM,CAAEA,EAAY,EAAM,CACnC,EAAG,CAACH,CAAe,CAAC,EAEpB,MAAMqB,EAAQtB,EAAAA,QAAQ,IAAO,CAC3B,CACE,MAAO,gBACX,MAAOD,EAAkB,OAAOJ,EAAO,UAAU,EAC7C,OAAQ,GACR,WAAY,UACZ,KAAM4B,EACN,MAAO,cAAA,EAET,CACE,MAAO,iBACP,MAAO,GAAG5B,EAAO,aAAa,GAC9B,OAAQ,GACR,WAAY,UACZ,KAAM6B,EACN,MAAO,aAAA,EAET,CACE,MAAO,uBACP,MAAO,GAAG7B,EAAO,iBAAiB,GAClC,OAAQ,GACR,WAAY,UACZ,KAAM8B,EACN,MAAO,eAAA,EAET,CACE,MAAO,kBACP,MAAO,GAAG9B,EAAO,aAAa,GAC9B,OAAQ,GACR,WAAY,UACZ,KAAM+B,EACN,MAAO,eAAA,CACT,EACE,CAAC/B,CAAM,CAAC,EAEZ,OAAIT,EACKyC,EAAAA,IAACC,EAAA,CAAe,KAAK,sBAAA,CAAuB,EAGjDvC,QAEC,MAAA,CAAI,UAAU,YACb,SAAAwC,EAAAA,KAAC,MAAA,CAAI,UAAU,2DAA2D,SAAA,CAAA,6BAC7CxC,CAAA,CAAA,CAC7B,CAAA,CACF,EAKFwC,EAAAA,KAAC,MAAA,CAAI,UAAU,YAEb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,+DACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAF,EAAAA,IAAC,KAAA,CAAG,UAAU,mCAAmC,SAAA,YAAS,EAC1DA,EAAAA,IAAC,IAAA,CAAE,UAAU,6BAA6B,SAAA,oCAAA,CAE1C,CAAA,EACF,EACAE,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAA,EAAAA,KAACC,EAAA,CACC,GAAG,SACH,UAAU,yBAEV,SAAA,CAAAH,EAAAA,IAACF,EAAA,CAAa,UAAU,cAAA,CAAe,EAAE,UAAA,CAAA,CAAA,EAG3CI,EAAAA,KAACC,EAAA,CACC,GAAG,YACH,UAAU,2BAEV,SAAA,CAAAH,EAAAA,IAACH,EAAA,CAAQ,UAAU,cAAA,CAAe,EAAE,aAAA,CAAA,CAAA,CAEtC,CAAA,CACF,CAAA,EACF,QAGC,MAAA,CAAI,UAAU,uDACZ,SAAAF,EAAM,IAAI,CAACS,EAAMC,IAChBL,EAAAA,IAAC,OAAgB,UAAU,WACzB,SAAAE,OAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAF,EAAAA,IAAC,MAAA,CAAI,UAAW,kBAAkBI,EAAK,KAAK,GAC1C,SAAAJ,EAAAA,IAACI,EAAK,KAAL,CAAU,UAAU,oBAAA,CAAqB,EAC5C,EACAF,EAAAA,KAAC,MAAA,CAAI,UAAU,cACb,SAAA,CAAAF,EAAAA,IAAC,IAAA,CAAE,UAAU,oCAAqC,SAAAI,EAAK,MAAM,EAC7DF,EAAAA,KAAC,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAF,EAAAA,IAAC,IAAA,CAAE,UAAU,mCAAoC,SAAAI,EAAK,MAAM,EAC5DJ,EAAAA,IAAC,OAAA,CAAK,UAAW,4BACfI,EAAK,aAAe,WAAa,iBAAmB,cACtD,GACG,SAAAA,EAAK,MAAA,CACR,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EAhBQC,CAiBV,CACD,EACH,EAGAH,EAAAA,KAAC,MAAA,CAAI,UAAU,wCAEb,SAAA,CAAAF,EAAAA,IAAC,OAAI,UAAU,gBACb,SAAAE,EAAAA,KAAC,MAAA,CAAI,UAAU,OACb,SAAA,CAAAF,EAAAA,IAAC,OAAI,UAAU,+BACb,SAAAE,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAF,EAAAA,IAAC,KAAA,CAAG,UAAU,sCAAsC,SAAA,sBAAmB,EACvEE,EAAAA,KAACC,EAAA,CACC,GAAG,WACH,UAAU,oEAEV,SAAA,CAAAH,EAAAA,IAACM,EAAA,CAAI,UAAU,cAAA,CAAe,EAAE,UAAA,CAAA,CAAA,CAElC,CAAA,CACF,CAAA,CACF,EACAN,EAAAA,IAAC,MAAA,CAAI,UAAU,kBACb,SAAAA,EAAAA,IAAC,MAAA,CAAI,UAAU,kBACb,SAAAE,OAAC,QAAA,CAAM,UAAU,sCACf,SAAA,CAAAF,MAAC,QAAA,CAAM,UAAU,eACf,SAAAE,EAAAA,KAAC,KAAA,CACC,SAAA,CAAAF,EAAAA,IAAC,KAAA,CAAG,UAAU,kFAAkF,SAAA,WAEhG,EACAA,EAAAA,IAAC,KAAA,CAAG,UAAU,kFAAkF,SAAA,SAEhG,EACAA,EAAAA,IAAC,KAAA,CAAG,UAAU,kFAAkF,SAAA,QAEhG,EACAA,EAAAA,IAAC,KAAA,CAAG,UAAU,kFAAkF,SAAA,OAEhG,EACAA,EAAAA,IAAC,KAAA,CAAG,UAAU,kFAAkF,SAAA,QAAA,CAEhG,CAAA,CAAA,CACF,CAAA,CACF,EACAA,EAAAA,IAAC,QAAA,CAAM,UAAU,2BACd,SAAApC,EAAmB,IAAK2C,GACvBL,EAAAA,KAAC,KAAA,CAAwB,UAAU,mBACjC,SAAA,CAAAF,EAAAA,IAAC,KAAA,CAAG,UAAU,aACZ,SAAAA,EAAAA,IAAC,OAAI,UAAU,4BAA6B,SAAAO,EAAY,QAAA,CAAS,CAAA,CACnE,EACAP,EAAAA,IAAC,KAAA,CAAG,UAAU,aACZ,SAAAA,EAAAA,IAAC,MAAA,CAAI,UAAU,4BAA6B,SAAA5B,EAAkB,OAAOmC,EAAY,MAAM,EAAE,EAC3F,QACC,KAAA,CAAG,UAAU,aACZ,SAAAL,EAAAA,KAAC,MAAA,CAAI,UAAU,gBAAiB,SAAA,CAAAK,EAAY,MAAM,QAAA,CAAA,CAAM,CAAA,CAC1D,EACAP,EAAAA,IAAC,KAAA,CAAG,UAAU,aACZ,SAAAA,EAAAA,IAAC,OAAI,UAAU,gBAAiB,SAAAO,EAAY,IAAA,CAAK,CAAA,CACnD,EACAP,EAAAA,IAAC,KAAA,CAAG,UAAU,aACZ,SAAAA,EAAAA,IAAC,QAAK,UAAU,sBACb,SAAAO,EAAY,MAAA,CACf,CAAA,CACF,CAAA,GAjBOA,EAAY,EAkBrB,CACD,CAAA,CACH,CAAA,CAAA,CACF,EACF,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,EAGAL,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,OACb,SAAA,CAAAF,EAAAA,IAAC,OAAI,UAAU,+BACb,SAAAE,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAF,EAAAA,IAAC,KAAA,CAAG,UAAU,sCAAsC,SAAA,kBAAe,EACnEE,EAAAA,KAACC,EAAA,CACC,GAAG,aACH,UAAU,oEAEV,SAAA,CAAAH,EAAAA,IAACM,EAAA,CAAI,UAAU,cAAA,CAAe,EAAE,QAAA,CAAA,CAAA,CAElC,CAAA,CACF,CAAA,CACF,EACAN,MAAC,MAAA,CAAI,UAAU,MACb,eAAC,MAAA,CAAI,UAAU,YACZ,SAAAlC,EAAiB,IAAK0C,GACrBN,EAAAA,KAAC,MAAA,CAAqB,UAAU,mFAC9B,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,SACb,SAAA,CAAAF,EAAAA,IAAC,IAAA,CAAE,UAAU,4BAA6B,SAAAQ,EAAQ,KAAK,EACvDN,EAAAA,KAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,CAAA,QAAMM,EAAQ,GAAA,EAAI,EACvDN,EAAAA,KAAC,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAA,EAAAA,KAAC,OAAA,CAAK,UAAU,mCACb,SAAA,CAAAM,EAAQ,aAAa,WAAA,EACxB,EACAN,EAAAA,KAAC,OAAA,CAAK,UAAU,6BAA6B,SAAA,CAAA,SACpCM,EAAQ,SAAS,GAAA,CAAA,CAC1B,CAAA,CAAA,CACF,CAAA,EACF,EACAR,EAAAA,IAAC,OAAI,UAAU,OACb,eAACD,EAAA,CAAc,UAAU,uBAAuB,CAAA,CAClD,CAAA,CAAA,EAfQS,EAAQ,EAgBlB,CACD,CAAA,CACH,CAAA,CACF,CAAA,EACF,EAGAN,EAAAA,KAAC,MAAA,CAAI,UAAU,OACb,SAAA,CAAAF,EAAAA,IAAC,MAAA,CAAI,UAAU,+BACb,SAAAA,EAAAA,IAAC,MAAG,UAAU,sCAAsC,yBAAa,CAAA,CACnE,QACC,MAAA,CAAI,UAAU,MACb,SAAAE,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,EAAAA,KAACC,EAAA,CACC,GAAG,SACH,UAAU,8CAEV,SAAA,CAAAH,EAAAA,IAACF,EAAA,CAAa,UAAU,cAAA,CAAe,EAAE,cAAA,CAAA,CAAA,EAG3CI,EAAAA,KAACC,EAAA,CACC,GAAG,YACH,UAAU,gDAEV,SAAA,CAAAH,EAAAA,IAACH,EAAA,CAAQ,UAAU,cAAA,CAAe,EAAE,aAAA,CAAA,CAAA,EAGtCK,EAAAA,KAACC,EAAA,CACC,GAAG,aACH,UAAU,gDAEV,SAAA,CAAAH,EAAAA,IAACD,EAAA,CAAc,UAAU,cAAA,CAAe,EAAE,kBAAA,CAAA,CAAA,EAG5CG,EAAAA,KAACC,EAAA,CACC,GAAG,WACH,UAAU,gDAEV,SAAA,CAAAH,EAAAA,IAACS,EAAA,CAAW,UAAU,cAAA,CAAe,EAAE,cAAA,CAAA,CAAA,CAEzC,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,CAEJ"}