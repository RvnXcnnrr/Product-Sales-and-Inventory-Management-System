{"version":3,"file":"Inventory-Ci2HL_Ii.js","sources":["../../node_modules/lucide-react/dist/esm/icons/history.js","../../node_modules/lucide-react/dist/esm/icons/trending-down.js","../../src/pages/Inventory.jsx"],"sourcesContent":["/**\n * @license lucide-react v0.307.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst History = createLucideIcon(\"History\", [\n  [\"path\", { d: \"M3 12a9 9 0 1 0 9-9 9.75 9.75 0 0 0-6.74 2.74L3 8\", key: \"1357e3\" }],\n  [\"path\", { d: \"M3 3v5h5\", key: \"1xhq8a\" }],\n  [\"path\", { d: \"M12 7v5l4 2\", key: \"1fdv2h\" }]\n]);\n\nexport { History as default };\n//# sourceMappingURL=history.js.map\n","/**\n * @license lucide-react v0.307.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst TrendingDown = createLucideIcon(\"TrendingDown\", [\n  [\"polyline\", { points: \"22 17 13.5 8.5 8.5 13.5 2 7\", key: \"1r2t7k\" }],\n  [\"polyline\", { points: \"16 17 22 17 22 11\", key: \"11uiuu\" }]\n]);\n\nexport { TrendingDown as default };\n//# sourceMappingURL=trending-down.js.map\n","import React, { useEffect, useState } from 'react'\nimport { \n  Package, \n  AlertTriangle, \n  TrendingUp, \n  TrendingDown,\n  Search,\n  Download,\n  Plus,\n  Minus,\n  Edit,\n  History\n} from 'lucide-react'\nimport Modal from '../components/ui/Modal'\nimport ConfirmDialog from '../components/ui/ConfirmDialog'\nimport { useForm } from 'react-hook-form'\nimport toast from 'react-hot-toast'\nimport { formatCurrency } from '../utils/format'\nimport supabase from '../lib/supabase'\nimport { onAppEvent } from '../lib/eventBus'\nimport { useAuth } from '../contexts/AuthContext'\n\nconst Inventory = () => {\n  const [searchTerm, setSearchTerm] = useState('')\n  const [selectedCategory, setSelectedCategory] = useState('all')\n  const [stockFilter, setStockFilter] = useState('all')\n  const [showStockUpdate, setShowStockUpdate] = useState(false)\n  const [selectedProduct, setSelectedProduct] = useState(null)\n  const [showHistory, setShowHistory] = useState(false)\n  const [pendingAdjustment, setPendingAdjustment] = useState(null)\n  const [showConfirmAdjustment, setShowConfirmAdjustment] = useState(false)\n  const { profile, user, loading: authLoading } = useAuth()\n\n  // DB-backed state\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n  const [products, setProducts] = useState([])\n  const [categoryMap, setCategoryMap] = useState(new Map())\n  const [categoriesList, setCategoriesList] = useState(['all'])\n  const [inventoryLogs, setInventoryLogs] = useState([])\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors }\n  } = useForm()\n\n  // Derived inventory view from products\n  const inventory = products.map(p => ({\n    id: p.id,\n    name: p.name,\n    sku: p.sku,\n    category: categoryMap.get(p.category_id) || 'Uncategorized',\n    current_stock: p.stock_quantity,\n    min_stock_level: p.min_stock_level || 0,\n    max_stock_level: p.max_stock_level || 0,\n    cost_price: Number(p.cost_price) || 0,\n    selling_price: Number(p.selling_price) || 0,\n    total_value: (Number(p.stock_quantity) || 0) * (Number(p.cost_price) || 0),\n    last_updated: p.updated_at,\n    supplier: '-',\n    location: '-'\n  }))\n\n  useEffect(() => {\n    let isMounted = true\n    const loadData = async () => {\n      try {\n        setLoading(true)\n        setError(null)\n\n        if (!profile?.store_id) {\n          if (isMounted) {\n            setProducts([])\n            setCategoryMap(new Map())\n            setCategoriesList(['all'])\n            setInventoryLogs([])\n          }\n          return\n        }\n\n        const [{ data: prods, error: prodErr }, { data: cats, error: catErr }] = await Promise.all([\n          supabase.from('products')\n            .select('id, name, sku, stock_quantity, min_stock_level, max_stock_level, cost_price, selling_price, category_id, updated_at')\n            .eq('store_id', profile.store_id)\n            .order('updated_at', { ascending: false }),\n          supabase.from('categories')\n            .select('id, name')\n            .eq('store_id', profile.store_id)\n            .order('name')\n        ])\n\n        if (prodErr) throw prodErr\n        if (catErr) throw catErr\n\n        const map = new Map((cats || []).map(c => [c.id, c.name]))\n        if (!isMounted) return\n        setProducts(prods || [])\n        setCategoryMap(map)\n        setCategoriesList(['all', ...Array.from(new Set((prods || []).map(p => map.get(p.category_id)).filter(Boolean)))])\n\n        const { data: logs, error: logErr } = await supabase\n          .from('inventory_logs')\n          .select('id, type, quantity_change, reason, created_at, product:products(name, sku)')\n          .eq('store_id', profile.store_id)\n          .order('created_at', { ascending: false })\n          .limit(50)\n\n        if (logErr) throw logErr\n        setInventoryLogs(logs || [])\n      } catch (e) {\n        console.error(e)\n        setError('Failed to load inventory')\n      } finally {\n        if (isMounted) setLoading(false)\n      }\n    }\n\n    if (!authLoading) {\n      loadData()\n    } else {\n      setLoading(true)\n    }\n\n    const unsubscribe = onAppEvent('transaction:completed', () => loadData())\n    return () => { isMounted = false; unsubscribe && unsubscribe() }\n  }, [authLoading, profile?.store_id])\n\n  const categories = categoriesList\n\n  const getStockStatus = (item) => {\n    if (item.current_stock === 0) {\n      return { status: 'out', label: 'Out of Stock', color: 'text-red-600', bg: 'bg-red-100' }\n    } else if (item.current_stock <= item.min_stock_level) {\n      return { status: 'low', label: 'Low Stock', color: 'text-orange-600', bg: 'bg-orange-100' }\n    } else if (item.current_stock >= item.max_stock_level * 0.8) {\n      return { status: 'high', label: 'High Stock', color: 'text-blue-600', bg: 'bg-blue-100' }\n    }\n    return { status: 'good', label: 'Normal', color: 'text-green-600', bg: 'bg-green-100' }\n  }\n\n  const filteredInventory = inventory.filter(item => {\n    const matchesSearch = item.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         item.sku.toLowerCase().includes(searchTerm.toLowerCase())\n    const matchesCategory = selectedCategory === 'all' || item.category === selectedCategory\n    \n    let matchesStock = true\n    if (stockFilter === 'low') {\n      matchesStock = item.current_stock <= item.min_stock_level\n    } else if (stockFilter === 'out') {\n      matchesStock = item.current_stock === 0\n    } else if (stockFilter === 'normal') {\n      matchesStock = item.current_stock > item.min_stock_level\n    }\n    \n    return matchesSearch && matchesCategory && matchesStock\n  })\n\n  const totalValue = inventory.reduce((sum, item) => sum + item.total_value, 0)\n  const lowStockCount = inventory.filter(item => item.current_stock <= item.min_stock_level).length\n  const outOfStockCount = inventory.filter(item => item.current_stock === 0).length\n\n  const applyStockUpdate = async (adjustment) => {\n    if (!selectedProduct) return\n    try {\n      const productId = selectedProduct.id\n      const prevQty = selectedProduct.current_stock\n      const newQty = Math.max(0, prevQty + adjustment)\n\n      // Update product quantity\n      const { error: updErr } = await supabase\n        .from('products')\n        .update({ stock_quantity: newQty })\n        .eq('id', productId)\n        .select()\n\n      if (updErr) throw updErr\n\n      // Insert inventory log\n      const { error: logErr } = await supabase\n        .from('inventory_logs')\n        .insert([{\n          product_id: productId,\n          store_id: profile?.store_id || null,\n          type: adjustment >= 0 ? 'adjustment' : 'adjustment',\n          quantity_change: adjustment,\n          previous_quantity: prevQty,\n          new_quantity: newQty,\n          reason: 'Manual adjustment',\n          reference_type: 'manual',\n          created_by: user?.id || null,\n          notes: ''\n        }])\n\n      if (logErr) throw logErr\n\n      // Refresh products and logs\n      setProducts(products.map(p => p.id === productId ? { ...p, stock_quantity: newQty, updated_at: new Date().toISOString() } : p))\n      setInventoryLogs([{\n        id: Date.now(),\n        type: 'adjustment',\n        quantity_change: adjustment,\n        reason: 'Manual adjustment',\n        created_at: new Date().toISOString(),\n        product: { name: selectedProduct.name, sku: selectedProduct.sku }\n      }, ...inventoryLogs])\n\n      setShowStockUpdate(false)\n      setSelectedProduct(null)\n      reset()\n      const actionType = adjustment > 0 ? 'increased' : 'decreased'\n      toast.success(`Stock ${actionType} successfully!`)\n    } catch (e) {\n      console.error(e)\n      toast.error('Failed to update stock')\n    }\n  }\n\n  const handleStockUpdate = (data) => {\n    const adjustment = parseInt(data.adjustment)\n    // If reducing stock, ask for confirmation\n    if (adjustment < 0) {\n      setPendingAdjustment(adjustment)\n      setShowConfirmAdjustment(true)\n      return\n    }\n    applyStockUpdate(adjustment)\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900 dark:text-gray-100\">Inventory Management</h1>\n          <p className=\"mt-1 text-sm text-gray-500 dark:text-gray-300\">\n            Monitor and manage your stock levels\n          </p>\n        </div>\n        <div className=\"mt-4 sm:mt-0 flex space-x-3\">\n          <button\n            onClick={() => setShowHistory(true)}\n            className=\"btn btn-secondary btn-md\"\n          >\n            <History className=\"w-4 h-4 mr-2\" />\n            Stock History\n          </button>\n          <button className=\"btn btn-secondary btn-md\">\n            <Download className=\"w-4 h-4 mr-2\" />\n            Export\n          </button>\n        </div>\n      </div>\n\n      {/* Summary Cards */}\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <div className=\"card p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"p-3 rounded-lg bg-blue-500\">\n              <Package className=\"w-6 h-6 text-white\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-600 dark:text-gray-300\">Total Products</p>\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">{inventory.length}</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"card p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"p-3 rounded-lg bg-green-500\">\n              <TrendingUp className=\"w-6 h-6 text-white\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-600 dark:text-gray-300\">Total Value</p>\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">{formatCurrency(totalValue)}</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"card p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"p-3 rounded-lg bg-orange-500\">\n              <AlertTriangle className=\"w-6 h-6 text-white\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-600 dark:text-gray-300\">Low Stock</p>\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">{lowStockCount}</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"card p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"p-3 rounded-lg bg-red-500\">\n              <TrendingDown className=\"w-6 h-6 text-white\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-600 dark:text-gray-300\">Out of Stock</p>\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">{outOfStockCount}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Filters */}\n      <div className=\"card p-4\">\n        <div className=\"flex flex-col lg:flex-row gap-4\">\n          <div className=\"flex-1 relative\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 dark:text-gray-500 w-5 h-5\" />\n            <input\n              type=\"text\"\n              placeholder=\"Search by product name or SKU...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"input pl-10\"\n            />\n          </div>\n          <select\n            value={selectedCategory}\n            onChange={(e) => setSelectedCategory(e.target.value)}\n            className=\"input w-full lg:w-auto\"\n          >\n            {categories.map(category => (\n              <option key={category} value={category}>\n                {category === 'all' ? 'All Categories' : category}\n              </option>\n            ))}\n          </select>\n          <select\n            value={stockFilter}\n            onChange={(e) => setStockFilter(e.target.value)}\n            className=\"input w-full lg:w-auto\"\n          >\n            <option value=\"all\">All Stock Levels</option>\n            <option value=\"normal\">Normal Stock</option>\n            <option value=\"low\">Low Stock</option>\n            <option value=\"out\">Out of Stock</option>\n          </select>\n        </div>\n      </div>\n\n      {/* Inventory Table */}\n      <div className=\"card overflow-hidden\">\n        <div className=\"overflow-x-auto\">\n      <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n            <thead className=\"table-header\">\n              <tr>\n        <th className=\"table-cell text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                  Product\n                </th>\n        <th className=\"table-cell text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                  Category\n                </th>\n        <th className=\"table-cell text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                  Current Stock\n                </th>\n        <th className=\"table-cell text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                  Min/Max\n                </th>\n        <th className=\"table-cell text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                  Value\n                </th>\n        <th className=\"table-cell text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                  Status\n                </th>\n        <th className=\"table-cell text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                  Location\n                </th>\n        <th className=\"table-cell text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                  Actions\n                </th>\n              </tr>\n            </thead>\n    <tbody className=\"divide-y divide-gray-200 dark:divide-gray-700\">\n              {filteredInventory.map((item) => {\n                const stockStatus = getStockStatus(item)\n                return (\n      <tr key={item.id} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\n                    <td className=\"table-cell\">\n                      <div>\n        <div className=\"font-medium text-gray-900 dark:text-gray-100\">{item.name}</div>\n        <div className=\"text-sm text-gray-500 dark:text-gray-400 font-mono\">{item.sku}</div>\n                      </div>\n                    </td>\n                    <td className=\"table-cell\">\n                      <span className=\"badge badge-info\">{item.category}</span>\n                    </td>\n                    <td className=\"table-cell\">\n                      <div className=\"font-medium text-lg\">{item.current_stock}</div>\n                    </td>\n                    <td className=\"table-cell\">\n                      <div className=\"text-sm\">\n                        <div>Min: {item.min_stock_level}</div>\n                        <div>Max: {item.max_stock_level}</div>\n                      </div>\n                    </td>\n                    <td className=\"table-cell\">\n                      <div className=\"text-sm\">\n                        <div className=\"font-medium\">{formatCurrency(item.total_value)}</div>\n        <div className=\"text-gray-500 dark:text-gray-400\">{formatCurrency(item.cost_price)} each</div>\n                      </div>\n                    </td>\n                    <td className=\"table-cell\">\n                      <span className={`badge ${stockStatus.bg} ${stockStatus.color}`}>\n                        {stockStatus.label}\n                      </span>\n                    </td>\n                    <td className=\"table-cell\">\n                      <div className=\"text-sm font-mono\">{item.location}</div>\n                    </td>\n                    <td className=\"table-cell\">\n                      <button\n                        onClick={() => {\n                          setSelectedProduct(item)\n                          setShowStockUpdate(true)\n                        }}\n                        className=\"btn btn-secondary btn-sm\"\n                      >\n                        <Edit className=\"w-4 h-4 mr-1\" />\n                        Adjust\n                      </button>\n                    </td>\n                  </tr>\n                )\n              })}\n            </tbody>\n          </table>\n        </div>\n\n  {filteredInventory.length === 0 && !loading && !error && (\n          <div className=\"text-center py-12\">\n            <Package className=\"w-12 h-12 text-gray-300 dark:text-gray-600 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 dark:text-gray-100 mb-2\">No inventory found</h3>\n            <p className=\"text-gray-500 dark:text-gray-400\">Try adjusting your search or filters</p>\n          </div>\n  )}\n      </div>\n\n      {/* Stock Update Modal */}\n      <Modal\n        isOpen={showStockUpdate}\n        onClose={() => {\n          setShowStockUpdate(false)\n          setSelectedProduct(null)\n          reset()\n        }}\n        title=\"Adjust Stock Level\"\n        size=\"md\"\n      >\n  {selectedProduct && (\n          <form onSubmit={handleSubmit(handleStockUpdate)} className=\"p-6 space-y-6\">\n            <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-4\">\n              <h3 className=\"font-medium text-gray-900 dark:text-gray-100 mb-2\">{selectedProduct.name}</h3>\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">SKU: {selectedProduct.sku}</p>\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">Current Stock: {selectedProduct.current_stock}</p>\n            </div>\n\n            <div>\n              <label className=\"label\">Stock Adjustment</label>\n              <input\n                type=\"number\"\n                {...register('adjustment', { \n                  required: 'Adjustment amount is required',\n                  validate: value => {\n                    const adj = parseInt(value)\n                    if (adj === 0) return 'Adjustment cannot be zero'\n                    if (selectedProduct.current_stock + adj < 0) {\n                      return 'Cannot reduce stock below zero'\n                    }\n                    return true\n                  }\n                })}\n                className=\"input\"\n                placeholder=\"Enter positive number to add, negative to remove\"\n              />\n              {errors.adjustment && (\n                <p className=\"text-sm text-red-600 mt-1\">{errors.adjustment.message}</p>\n              )}\n              <p className=\"text-sm text-gray-500 mt-1\">\n                Use positive numbers to increase stock, negative to decrease\n              </p>\n            </div>\n\n            <div>\n              <label className=\"label\">Reason</label>\n              <select\n                {...register('reason', { required: 'Reason is required' })}\n                className=\"input\"\n              >\n                <option value=\"\">Select reason</option>\n                <option value=\"Purchase Order\">Purchase Order</option>\n                <option value=\"Stock Return\">Stock Return</option>\n                <option value=\"Damage/Loss\">Damage/Loss</option>\n                <option value=\"Theft\">Theft</option>\n                <option value=\"Manual Correction\">Manual Correction</option>\n                <option value=\"Transfer\">Transfer</option>\n                <option value=\"Other\">Other</option>\n              </select>\n              {errors.reason && (\n                <p className=\"text-sm text-red-600 mt-1\">{errors.reason.message}</p>\n              )}\n            </div>\n\n            <div>\n              <label className=\"label\">Notes (Optional)</label>\n              <textarea\n                {...register('notes')}\n                className=\"input h-20 resize-none\"\n                placeholder=\"Additional notes about this adjustment\"\n              />\n            </div>\n\n            <div className=\"flex justify-end space-x-3 pt-4 border-t\">\n              <button\n                type=\"button\"\n                onClick={() => {\n                  setShowStockUpdate(false)\n                  setSelectedProduct(null)\n                  reset()\n                }}\n                className=\"btn btn-secondary btn-md\"\n              >\n                Cancel\n              </button>\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary btn-md\"\n              >\n                Update Stock\n              </button>\n            </div>\n          </form>\n        )}\n      </Modal>\n\n      {/* Confirm negative adjustment */}\n      <ConfirmDialog\n        isOpen={showConfirmAdjustment}\n        onCancel={() => setShowConfirmAdjustment(false)}\n        onConfirm={() => { if (typeof pendingAdjustment === 'number') applyStockUpdate(pendingAdjustment); setShowConfirmAdjustment(false) }}\n        title=\"Reduce stock?\"\n        description=\"You're about to reduce the stock quantity. This will update current stock and cannot be undone.\"\n        confirmText=\"Reduce\"\n        variant=\"danger\"\n      />\n\n      {/* Stock History Modal */}\n      <Modal\n        isOpen={showHistory}\n        onClose={() => setShowHistory(false)}\n        title=\"Stock Movement History\"\n        size=\"lg\"\n      >\n        <div className=\"p-6\">\n          <div className=\"space-y-4\">\n            {inventoryLogs.map((entry) => (\n              <div key={entry.id} className=\"flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\">\n                <div className=\"flex items-center space-x-4\">\n                  <div className={`p-2 rounded-lg ${entry.quantity_change >= 0 ? 'bg-green-100' : 'bg-red-100'}`}>\n                    {entry.quantity_change >= 0 ? (\n                      <Plus className=\"w-4 h-4 text-green-600\" />\n                    ) : (\n                      <Minus className=\"w-4 h-4 text-red-600\" />\n                    )}\n                  </div>\n                  <div>\n                    <p className=\"font-medium text-gray-900 dark:text-gray-100\">{entry.product?.name || 'Product'}</p>\n                    <p className=\"text-sm text-gray-500 dark:text-gray-400\">{entry.reason || 'Adjustment'}</p>\n                    <p className=\"text-sm text-gray-500 dark:text-gray-400\">{entry.quantity_change >= 0 ? 'Increase' : 'Decrease'}</p>\n                  </div>\n                </div>\n                <div className=\"text-right\">\n                  <p className={`font-medium ${entry.quantity_change > 0 ? 'text-green-600' : 'text-red-600'}`}>\n                    {entry.quantity_change > 0 ? '+' : ''}{entry.quantity_change}\n                  </p>\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                    {new Date(entry.created_at).toLocaleDateString()}\n                  </p>\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {inventoryLogs.length === 0 && (\n            <div className=\"text-center py-8\">\n              <History className=\"w-12 h-12 text-gray-300 dark:text-gray-600 mx-auto mb-4\" />\n              <p className=\"text-gray-500 dark:text-gray-400\">No stock movements recorded</p>\n            </div>\n          )}\n        </div>\n      </Modal>\n    </div>\n  )\n}\n\nexport default Inventory\n"],"names":["History","createLucideIcon","TrendingDown","Inventory","searchTerm","setSearchTerm","useState","selectedCategory","setSelectedCategory","stockFilter","setStockFilter","showStockUpdate","setShowStockUpdate","selectedProduct","setSelectedProduct","showHistory","setShowHistory","pendingAdjustment","setPendingAdjustment","showConfirmAdjustment","setShowConfirmAdjustment","profile","user","authLoading","useAuth","loading","setLoading","error","setError","products","setProducts","categoryMap","setCategoryMap","categoriesList","setCategoriesList","inventoryLogs","setInventoryLogs","register","handleSubmit","reset","errors","useForm","inventory","p","useEffect","isMounted","loadData","prods","prodErr","cats","catErr","supabase","map","c","logs","logErr","e","unsubscribe","onAppEvent","categories","getStockStatus","item","filteredInventory","matchesSearch","matchesCategory","matchesStock","totalValue","sum","lowStockCount","outOfStockCount","applyStockUpdate","adjustment","productId","prevQty","newQty","updErr","actionType","toast","handleStockUpdate","data","jsxs","jsx","Download","Package","TrendingUp","formatCurrency","AlertTriangle","Search","category","stockStatus","Edit","Modal","value","adj","ConfirmDialog","entry","Plus","Minus","_a"],"mappings":"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","x_google_ignoreList":[0,1]}